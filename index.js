const TelegramBot = require('node-telegram-bot-api');
const token = "7302018267:AAHMGwEykO6dcfhvoo63namXkuCZ0_o9_no";
const bot = new TelegramBot(token, {polling: true});
const webAppUrl = 'https://1win-global-pro.com/bonus500';
const imgPATH = "https://liquipedia.net/commons/images/thumb/2/24/1win_2024_lightmode.png/600px-1win_2024_lightmode.png"
const dbPath = "https://sheetdb.io/api/v1/9r9b3flxo3dvn"

const saveUser = async (user) => {
    try {
        const response = await fetch(dbPath, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(user)
        });

        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${response.statusText}`);
        }

        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    }
}

const validateUser = async (id) => {
    try {
        const url = `${dbPath}`; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ API –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–æ–∏—Å–∫ –ø–æ ID
        const response = await fetch(url, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${response.statusText}`);
        }
        const userData = await response.json();

        if (!userData.length) {
            return false;
        } else {
            return true;
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        return false;
    }
}


bot.onText(/\/echo (.+)/, (msg, match) => {
    // 'msg' is the received Message from Telegram
    // 'match' is the result of executing the regexp above on the text content
    // of the message

    const chatId = msg.chat.id;
    const resp = match[1]; // the captured "whatever"

    // send back the matched "whatever" to the chat
    bot.sendMessage(chatId, resp);
});
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text

    const userId = msg.from.id;
    const firstName = msg.from.first_name;
    const username = msg.from.username;
    const languageCode = msg.from.language_code;

    const user = {
        userId,
        firstName,
        nickname: username,
        languageCode,
        date: new Date(Date.now()).toLocaleString("ru-RU"),
    }

    const userInBase = await validateUser(userId)
    if (!userInBase) {
        await saveUser(user)
    }

    if (text === '/start') {
        await bot.sendPhoto(chatId, imgPATH, {
            caption: '–≠—Ç–æ—Ç –±–æ—Ç - –ø–æ–ª–Ω–∞—è –∑–∞–º–µ–Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ 1win –≤ –†–æ—Å—Å–∏–∏ –∏ —Å—Ç—Ä–∞–Ω–∞—Ö –°–ù–ì \n' +
                '\n' +
                '–ú—ã –≤—ã–≤–µ–ª–∏ –∫–∞–∑–∏–Ω–æ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å, —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏–≥—Ä–∞—Ç—å –≤ –ª—é–±–∏–º—ã–µ —Å–ª–æ—Ç—ã –ø—Ä—è–º–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ üé∞\n' +
                '\n' +
                '–ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –ø–æ–ª—É—á–∏—Ç–µ –ë–æ–Ω—É—Å + 500% –∫ –¥–µ–ø–æ–∑–∏—Ç—É –∏ 30% –∫—ç—à–±—ç–∫ –Ω–∞ –∫–∞–∑–∏–Ω–æ üí∏',
            reply_markup: {
                inline_keyboard: [
                    [{text: '–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç? ü§ñ', web_app: {url: webAppUrl}}],
                    [{text: '–ê–∫—Ü–∏–∏ –∏ –ë–æ–Ω—É—Å—ã ‚úàÔ∏è', web_app: {url: webAppUrl}}],
                    [{text: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å –ü—Ä–æ–º–æ–∫–æ–¥–æ–º üöÄ', web_app: {url: webAppUrl}}],
                    [{text: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª 1win Premium üòç', web_app: {url: webAppUrl}}],
                ],
                resize_keyboard: true,
                one_time_keyboard: true,
            }
        });
    }
});

